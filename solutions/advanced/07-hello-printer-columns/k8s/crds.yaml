apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: servicedeployments.k8s.example.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: k8s.example.com
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: servicedeployments
    # singular name to be used as an alias on the CLI and for display
    singular: servicedeployment
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: ServiceDeployment
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
      - sd
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required: ["replicas", "containers", "service"]
              properties:
                replicas:
                  type: integer
                  description: Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
                  minimum: 0
                containers:
                  description: List of containers belonging to the pod. There must be at least one container in a Pod.
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required: ["name", "image"]
                    properties:
                      name:
                        type: string
                      image:
                        type: string
                    x-kubernetes-preserve-unknown-fields: true

                service:
                  type: object
                  required: ["ports"]
                  properties:
                    name:
                      type: string
                      description: Name of the service. Name must be unique within a namespace. Is autogenerated with "-svc" suffix, if not provided.
                    type:
                      type: string
                      enum: ["ClusterIP", "NodePort", "LoadBalancer"]
                      description: Determines how the Service is exposed. Defaults to ClusterIP. Valid options are ClusterIP, NodePort and LoadBalancer.
                    ports:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            description: The name of this port within the service. This must be a DNS_LABEL.
                            type: string
                          protocol:
                            description: The IP protocol for this port. Supports "TCP", "UDP", and "SCTP". Default is TCP.
                            type: string
                            enum: ["SCTP", "TCP", "UDP"]
                          port:
                            description: The port that will be exposed by this service.
                            type: integer
                            minimum: 1
                            maximum: 65535
                          targetPort:
                            description: Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535.
                            x-kubernetes-int-or-string: true
                          nodePort:
                            description: The port on each node on which this service is exposed when type is NodePort or LoadBalancer.
                            type: integer
                            minimum: 1
                            maximum: 65535

            status:
              type: object
              properties:
                desiredReplicas:
                  type: integer
                  minimum: 0
                readyReplicas:
                  type: integer
                  minimum: 0
                updatedReplicas:
                  type: integer
                  minimum: 0
                availableReplicas:
                  type: integer
                  minimum: 0
                ready:
                  type: string
                serviceType:
                  type: string
                clusterIP:
                  type: string
                externalIPs:
                  type: string
                ports:
                  type: string

      subresources:
        status: {}

      # Specifies additional columns returned in Table output
      additionalPrinterColumns:
        - name: READY
          type: string
          priority: 0
          jsonPath: .status.ready
        - name: UP-TO-DATE
          type: integer
          priority: 3
          jsonPath: .status.updatedReplicas
        - name: AVAILABLE
          type: integer
          priority: 3
          jsonPath: .status.availableReplicas
        - name: SERVICE-TYPE
          type: string
          priority: 0
          jsonPath: .status.serviceType
        - name: CLUSTER-IP
          type: string
          priority: 0
          jsonPath: .status.clusterIP
        - name: EXTERNAL-IP
          type: string
          priority: 2
          jsonPath: .status.externalIPs
        - name: PORT(S)
          type: string
          priority: 0
          jsonPath: .status.ports
        - name: AGE
          type: date
          priority: 0
          jsonPath: .metadata.creationTimestamp
